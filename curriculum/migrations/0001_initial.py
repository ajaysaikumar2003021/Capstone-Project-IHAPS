# Generated by Django 4.0.3 on 2022-03-17 14:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcadmeicCourse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sust_course_title', models.CharField(max_length=255, unique=True)),
                ('department', models.CharField(max_length=100)),
                ('level_of_course', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=255)),
                ('course_type', models.CharField(max_length=50)),
                ('semester_offered', models.CharField(max_length=50)),
                ('year_offered', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='CampusFleet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reporting_period', models.CharField(max_length=100)),
                ('num_vechicles', models.IntegerField()),
                ('num_gasoline_vehicles', models.IntegerField()),
                ('num_diesel_vehicles', models.IntegerField()),
                ('num_gasoline_hybrid_vehicles', models.IntegerField()),
                ('num_diesel_hybrid_vehicles', models.IntegerField()),
                ('num_plugin_hybrid_vehicles', models.IntegerField()),
                ('num_electric_vehicles', models.IntegerField()),
                ('num_cng_vehicles', models.IntegerField()),
                ('cum_hudrogen_vehicles', models.IntegerField()),
                ('num_b20_vehicles', models.IntegerField()),
                ('num_b5_vehicles', models.IntegerField()),
                ('campus_fleet_title', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContinuingEducationCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reporting_date', models.DateField(auto_now_add=True)),
                ('continuing_education_course_title', models.CharField(max_length=100, unique=True)),
                ('department', models.CharField(max_length=100)),
                ('course_description', models.CharField(max_length=255)),
                ('course_type', models.CharField(max_length=100)),
                ('semester', models.IntegerField()),
                ('year', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='FacultySustResearchAndService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reporting_date', models.DateField(auto_now_add=True)),
                ('faculty_name', models.CharField(max_length=100)),
                ('faculty_email', models.EmailField(max_length=100)),
                ('department_affiliation', models.CharField(max_length=100)),
                ('sust_research_area', models.CharField(max_length=100)),
                ('research_interests', models.CharField(max_length=255)),
                ('research_published', models.CharField(max_length=20)),
                ('publication_title', models.CharField(blank=True, max_length=30, null=True)),
                ('journal_name', models.CharField(blank=True, max_length=30, null=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('publication_deposited', models.BooleanField(blank=True, default=False, null=True)),
                ('presented_research_at_sust_conference', models.BooleanField(blank=True, default=False, null=True)),
                ('sust_research_conf_description', models.TextField(blank=True, null=True)),
                ('sust_research_service_dates', models.CharField(blank=True, max_length=100, null=True)),
                ('support_url', models.URLField(blank=True, max_length=255, null=True)),
                ('supporting_document', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FoodBeveragePurchasing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=100)),
                ('product_type', models.CharField(max_length=100)),
                ('single_ingredient', models.BooleanField(default=False)),
                ('product_description', models.CharField(max_length=255)),
                ('recognized_standard_met', models.CharField(max_length=255)),
                ('sfsc', models.BooleanField(default=False)),
                ('reporting_period', models.CharField(max_length=255)),
                ('expenditure', models.CharField(max_length=15)),
                ('food_service_provider', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='POC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('phone', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StaffProfessionalDevelopment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reporting_date', models.DateField(auto_now_add=True)),
                ('staff_professional_development_title', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('dates_offered', models.CharField(max_length=100)),
                ('num_of_staff_participants', models.IntegerField()),
                ('internally_or_externally_funded', models.CharField(max_length=100)),
                ('staff_professional_development_url', models.URLField(blank=True, max_length=255, null=True)),
                ('supporting_doc', models.CharField(blank=True, max_length=255, null=True)),
                ('poc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curriculum.poc')),
            ],
        ),
        migrations.CreateModel(
            name='PeerToPeerOutreach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reporting_date', models.DateField(auto_now_add=True)),
                ('peer_to_peer_outreach_type', models.TextField(max_length=100)),
                ('peer_to_peer_outreach_title', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('educators_training', models.CharField(max_length=255)),
                ('target_audience', models.CharField(max_length=255)),
                ('program_starting_date', models.DateField()),
                ('program_status', models.CharField(max_length=10)),
                ('num_actively_trained_educators', models.IntegerField()),
                ('num_weeks_program_is_active_annually', models.IntegerField()),
                ('num_hours_worked_weekly_per_trained_educators', models.IntegerField()),
                ('num_hours_worked_annualy_by_trained_educators', models.IntegerField()),
                ('program_url', models.URLField(blank=True, max_length=255, null=True)),
                ('supporting_doc', models.CharField(blank=True, max_length=255, null=True)),
                ('poc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curriculum.poc')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityPartnership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reporting_date', models.DateField(auto_now_add=True)),
                ('community_partnership_title', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('supported', models.BooleanField(default=False)),
                ('timeframe', models.CharField(max_length=50)),
                ('type_of_partnership', models.CharField(max_length=100)),
                ('vulnerable_population_engagement', models.BooleanField(default=True)),
                ('community_partnership_url', models.URLField(blank=True, max_length=255, null=True)),
                ('poc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curriculum.poc')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityEducationProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reporting_date', models.DateField(auto_now_add=True)),
                ('ce_program_title', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('semester_program_started', models.CharField(max_length=100)),
                ('year_program_started', models.CharField(max_length=10)),
                ('program_status', models.CharField(max_length=10)),
                ('poc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curriculum.poc')),
            ],
        ),
        migrations.CreateModel(
            name='CampusAsLivingLab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=100, unique=True)),
                ('type_of_project', models.CharField(max_length=50)),
                ('contribution_to_impact_area', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('project_date', models.DateField(auto_now_add=True)),
                ('project_url', models.URLField(blank=True, max_length=255, null=True)),
                ('relative_doc', models.CharField(blank=True, max_length=255, null=True)),
                ('poc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curriculum.poc')),
            ],
        ),
        migrations.CreateModel(
            name='AcadmeicProgram',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sust_focused_academic_program', models.CharField(max_length=255, unique=True)),
                ('college_or_unit', models.CharField(max_length=50)),
                ('level_of_program', models.CharField(max_length=30)),
                ('program_type', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('website_url', models.URLField(blank=True, max_length=255, null=True)),
                ('adopted_sust_focused_learning_outcome', models.CharField(max_length=10)),
                ('requires_successful_completion_of_sust_focused_course', models.BooleanField(default=False)),
                ('semester_program_started', models.CharField(max_length=50)),
                ('year_program_started', models.CharField(max_length=10)),
                ('program_active', models.BooleanField(default=False)),
                ('reporting_date', models.DateField(auto_now_add=True)),
                ('poc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curriculum.poc')),
            ],
        ),
    ]
